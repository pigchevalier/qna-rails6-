p= link_to question.title, question
p= question.body

.links
    -if question.links.any?
      p Links:
      ul
        - question.links.each do |link|
          li 
            =link_to link.name, link.url
            p 
              script src=link.gist
            =link_to 'Remove', link_destroy_url( id: link ), method: :delete, remote: true

- if user_signed_in? && current_user.author_of?(question)
  = link_to 'Edit', '#', class: 'edit-question-link', data: { question_id: question.id }
  = form_with model: question, class: 'hidden', html: { id: "edit-question-#{question.id}"}, local: false do |f|
    = f.label :title, 'Title of question'
    = f.text_field :title
    = f.label :body, 'Your question'
    = f.text_area :body
    = f.label :files
    = f.file_field :files, multiple: true, direct_upload: true
    p Links:
    p
      =f.fields_for :links do |link|
        = render 'link_fields', f: link
      .links
        = link_to_add_association 'add link', f, :links
    = f.submit 'Save'
  = link_to 'Delete question', question_path(question), remote: true, method: :delete
- if question.files.attached?
  - question.files.each do |file|
    p= link_to file.filename.to_s, url_for(file)
    - if user_signed_in? && current_user.author_of?(question)
      p= link_to 'Remove', attachment_destroy_url(file_id: file), method: :delete, remote: true
.rewards
  -if question.rewards.any?
    =render question.rewards
=render 'votes/vote', obj: question
